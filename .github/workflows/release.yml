name: PyStand

on: [push, pull_request]

env:
  PYSTAND_VERSION: 1.0.6

jobs:
  build:
    if: >-
      ! contains(toJSON(github.event.commits.*.message), '[skip ci]') &&
      ! contains(toJSON(github.event.commits.*.message), '[skip github]')
    runs-on: windows-latest
    strategy:
      fail-fast: false
      matrix:
        include:
          - {generator: Visual Studio 17 2022, arch: Win32, console: OFF, subsystem: GUI}
          - {generator: Visual Studio 17 2022, arch: Win32, console: ON, subsystem: CLI}
          - {generator: Visual Studio 17 2022, arch: x64, console: OFF, subsystem: GUI}
          - {generator: Visual Studio 17 2022, arch: x64, console: ON, subsystem: CLI}
    steps:
    - name: Checkout
      uses: actions/checkout@v3
    - name: Configure
      run: |
        cmake -G "${{ matrix.generator }}" -A ${{ matrix.arch }} -DPYSTAND_CONSOLE=${{ matrix.console }} -B build
    - name: Build
      run: cmake --build build --config Release 
    - name: Upload artifacts
      uses: actions/upload-artifact@v3
      with:
        name: PyStand-${{ env.PYSTAND_VERSION }}-${{ matrix.arch }}-${{ matrix.subsystem }}
        path: build/Release

  release:
    needs: [build]
    runs-on: windows-latest
    steps:
    - name: Download artifacts
      uses: actions/download-artifact@v2
      with:
        path: artifacts

    - name: Create release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ needs.setup.outputs.VERSION }}
        release_name: Release ${{ needs.setup.outputs.VERSION }}
        draft: false
        prerelease: false

    - name: Upload PyStand ${{ env.PYSTAND_VERSION }} Win32 GUI
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        ASSET_NAME: PyStand-${{ env.PYSTAND_VERSION }}-${{ matrix.arch }}-${{ matrix.subsystem }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: artifacts/${{ env.ASSET_NAME }}/${{ env.PACKAGENAME }}.zip
        asset_name: ${{ env.ASSET_NAME }}.zip
        asset_content_type: application/zip
